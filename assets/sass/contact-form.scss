@import 'extensions/all';

.contact-form {
  margin: 0 auto;
  text-align: center;

  input, select {
    width: 100%;
    box-sizing: border-box;
    border-radius: 5px;
    padding: 16px 20px;
  }

  h2 {
    margin-bottom: 20px;
    font-weight: normal;
  }

  &__field {
    display: block;
    max-width: 368px;
    border: 1px solid #d2dce8;
    margin: 0 auto 20px;
    color: #697b95;
  }

  // Max design width should see fields formatted into two columns
  // This could be done flexbox but that may be a tad overkill
  // instead we can use inline blocks combined with nth-child pseudo
  @media only screen and (min-width: $max-design-width) {
    &__field { display: inline-block; }

    &__field:nth-child(even) { margin-right: 30px; }
  }

  &__submit {
    max-width: 270px; // Design of button is responsive but should not exceed 270px
    border: 1px solid #53b16a;
    background-color: #76e691;
    color: #fff;
  }

  &__submit:hover, &__submit:active {
    cursor: pointer;
    opacity: 0.9;
    transition: opacity .1s ease-in;
  }
}

// The dashed line below the contact form is a different width to the contact form so we
// cannot simply apply it to the contact form container, so we need to try something different
// we also don't want to use a bg image if we can avoid it.
// What i'm doing here is creating an artificial element below the contact form using the
// "after" pseudo, and simply applying the fixed width I need and a normal dashed border.
.contact-form::after {
  display: block;
  width: 100%;
  max-width: 170px;
  margin: 0 auto 42px;
  border-bottom: 1px dashed #697B95;
  padding-bottom: 42px;
  content: '';

  @media only screen and (min-width: $max-design-width) {
    margin-bottom: 60px;
    padding-bottom: 60px;
  }
}
